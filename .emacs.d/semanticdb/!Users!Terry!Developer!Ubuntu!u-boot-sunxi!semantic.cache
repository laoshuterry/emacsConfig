;; Object u-boot-sunxi/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "u-boot-sunxi/"
  :tables
  (list
    (semanticdb-table "Makefile"
      :major-mode 'makefile-bsdmake-mode
      :tags 
        '( ("VERSION" variable (:default-value ("2015")) nil [1 16])
            ("PATCHLEVEL" variable (:default-value ("10")) nil [16 32])
            ("SUBLEVEL" variable nil nil [32 43])
            ("EXTRAVERSION" variable (:default-value ("-rc1")) nil [43 63])
            ("NAME" variable nil nil [63 70])
            ("MAKEFLAGS" variable (:default-value ("-rR" "--include-dir=$(CURDIR)")) nil [495 536])
            ("LC_COLLATE" variable (:default-value ("C")) nil [594 607])
            ("LC_NUMERIC" variable (:default-value ("C")) nil [607 620])
            ("PHONY" variable (:default-value ("_all")) nil [3951 3965])
            ("_all" function nil nil [3965 3971])
            ("Makefile" function (:arguments (";")) nil [4012 4043])
            ("$(CURDIR)" function (:arguments (";")) nil [4012 4043])
            ("saved-output" variable (:default-value ("$(KBUILD_OUTPUT)")) nil [4195 4228])
            ("KBUILD_OUTPUT" variable (:default-value ("$(shell mkdir -p $(KBUILD_OUTPUT) && cd $(KBUILD_OUTPUT) \\
								&& /bin/pwd)")) nil [4228 4325])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)" "sub-make")) nil [4419 4453])
            ("_all" function (:arguments ("sub-make")) nil [4454 4537])
            ("$(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS))" function (:arguments ("sub-make")) nil [4454 4537])
            ("sub-make" function (:arguments ("FORCE")) nil [4538 4677])
            ("skip-makefile" variable (:default-value ("1")) nil [4725 4744])
            ("MAKEFLAGS" variable (:default-value ("--no-print-directory")) nil [5086 5120])
            ("PHONY" variable (:default-value ("all")) nil [6021 6034])
            ("_all" function (:arguments ("all")) nil [6059 6069])
            ("_all" function (:arguments ("modules")) nil [6074 6088])
            ("objtree" variable (:default-value (".")) nil [6396 6410])
            ("src" variable (:default-value ("$(srctree)")) nil [6410 6429])
            ("obj" variable (:default-value ("$(objtree)")) nil [6429 6448])
            ("VPATH" variable (:default-value ("$(srctree)$(if $(KBUILD_EXTMOD),:$(KBUILD_EXTMOD))")) nil [6449 6510])
            ("HOSTARCH" variable (:default-value ("$(shell uname -m | \\
	sed -e s/i.86/x86/ \\
	    -e s/sun4u/sparc64/ \\
	    -e s/arm.*/arm/ \\
	    -e s/sa110/arm/ \\
	    -e s/ppc64/powerpc/ \\
	    -e s/ppc/powerpc/ \\
	    -e s/macppc/powerpc/\\
	    -e s/sh.*/sh/)")) nil [6677 6904])
            ("HOSTOS" variable (:default-value ("$(shell uname -s | tr '[:upper:]' '[:lower:]' | \\
	    sed -e 's/\\(cygwin\\).*/cygwin/')")) nil [6905 7003])
            ("CONFIG_SHELL" variable (:default-value ("$(shell if [ -x \"$$BASH\" ]; then echo $$BASH; \\
	  else if [ -x /bin/bash ]; then echo /bin/bash; \\
	  else echo sh; fi ; fi)")) nil [7269 7411])
            ("HOSTCC" variable (:default-value ("cc")) nil [7412 7430])
            ("HOSTCXX" variable (:default-value ("c++")) nil [7430 7449])
            ("HOSTCFLAGS" variable (:default-value ("-Wall" "-Wstrict-prototypes" "-O2" "-fomit-frame-pointer")) nil [7449 7515])
            ("HOSTCXXFLAGS" variable (:default-value ("-O2")) nil [7515 7534])
            ("HOSTCFLAGS" variable (:default-value ("-ansi")) nil [7559 7579])
            ("DARWIN_MAJOR_VERSION" variable (:default-value ("$(shell sw_vers -productVersion | cut -f 1 -d '.')")) nil [8251 8325])
            ("DARWIN_MINOR_VERSION" variable (:default-value ("$(shell sw_vers -productVersion | cut -f 2 -d '.')")) nil [8325 8399])
            ("os_x_before" variable (:default-value ("$(shell if [ $(DARWIN_MAJOR_VERSION) -le $(1) -a \\
	$(DARWIN_MINOR_VERSION) -le $(2) ] ; then echo \"$(3)\"; else echo \"$(4)\"; fi ;)")) nil [8400 8545])
            ("HOSTCC" variable (:default-value ("$(call os_x_before, 10, 5, \"cc\", \"gcc\")")) nil [8626 8681])
            ("HOSTCFLAGS" variable (:default-value ("$(call os_x_before, 10, 4, \"-traditional-cpp\")")) nil [8681 8743])
            ("HOSTLDFLAGS" variable (:default-value ("$(call os_x_before, 10, 5, \"-multiply_defined suppress\")")) nil [8743 8815])
            ("HOSTLDFLAGS" variable (:default-value ("$(call os_x_before, 10, 7, \"\", \"-Xlinker -no_pie\")")) nil [8976 9042])
            ("KBUILD_MODULES" variable nil nil [9134 9152])
            ("KBUILD_BUILTIN" variable (:default-value ("1")) nil [9152 9172])
            ("scripts/Kbuild.include" function (:arguments (";")) nil [10001 10027])
            ("scripts/Kbuild.include" include nil nil [10027 10058])
            ("AS" variable (:default-value ("$(CROSS_COMPILE)as")) nil [10090 10115])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld.bfd")) nil [10192 10221])
            ("LD" variable (:default-value ("$(CROSS_COMPILE)ld")) nil [10226 10251])
            ("CC" variable (:default-value ("$(CROSS_COMPILE)gcc")) nil [10257 10283])
            ("CPP" variable (:default-value ("$(CC)" "-E")) nil [10283 10299])
            ("AR" variable (:default-value ("$(CROSS_COMPILE)ar")) nil [10299 10324])
            ("NM" variable (:default-value ("$(CROSS_COMPILE)nm")) nil [10324 10349])
            ("LDR" variable (:default-value ("$(CROSS_COMPILE)ldr")) nil [10349 10376])
            ("STRIP" variable (:default-value ("$(CROSS_COMPILE)strip")) nil [10376 10407])
            ("OBJCOPY" variable (:default-value ("$(CROSS_COMPILE)objcopy")) nil [10407 10442])
            ("OBJDUMP" variable (:default-value ("$(CROSS_COMPILE)objdump")) nil [10442 10477])
            ("AWK" variable (:default-value ("awk")) nil [10477 10488])
            ("PERL" variable (:default-value ("perl")) nil [10488 10501])
            ("PYTHON" variable (:default-value ("python")) nil [10501 10518])
            ("DTC" variable (:default-value ("dtc")) nil [10518 10529])
            ("CHECK" variable (:default-value ("sparse")) nil [10529 10545])
            ("CHECKFLAGS" variable (:default-value ("-D__linux__" "-Dlinux" "-D__STDC__" "-Dunix" "-D__unix__" "-Wbitwise" "-Wno-return-void" "-D__CHECK_ENDIAN__" "$(CF)")) nil [10546 10671])
            ("KBUILD_CPPFLAGS" variable (:default-value ("-D__KERNEL__" "-D__UBOOT__")) nil [10672 10716])
            ("KBUILD_CFLAGS" variable (:default-value ("-Wall" "-Wstrict-prototypes" "-Wno-format-security" "-fno-builtin" "-ffreestanding")) nil [10717 10825])
            ("KBUILD_AFLAGS" variable (:default-value ("-D__ASSEMBLY__")) nil [10825 10859])
            ("UBOOTRELEASE" variable (:default-value ("$(shell cat include/config/uboot.release 2> /dev/null)")) nil [10929 10999])
            ("UBOOTVERSION" variable (:default-value ("$(VERSION)$(if $(PATCHLEVEL),.$(PATCHLEVEL)$(if $(SUBLEVEL),.$(SUBLEVEL)))$(EXTRAVERSION)")) nil [10999 11104])
            ("MODVERDIR" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [11665 11752])
            ("export" function (:arguments ("=" "$(if $(KBUILD_EXTMOD),$(firstword $(KBUILD_EXTMOD))/).tmp_versions")) nil [11665 11752])
            ("RCS_FIND_IGNORE" function (:arguments ("=" "\\( -name SCCS -o -name BitKeeper -o -name .svn -o    \\
			  -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [11795 11951])
            ("export" function (:arguments ("=" "\\( -name SCCS -o -name BitKeeper -o -name .svn -o    \\
			  -name CVS -o -name .pc -o -name .hg -o -name .git \\)" "-prune" "-o")) nil [11795 11951])
            ("RCS_TAR_IGNORE" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [11951 12089])
            ("export" function (:arguments ("=" "--exclude" "SCCS" "--exclude" "BitKeeper" "--exclude" ".svn" "--exclude" "CVS" "--exclude" ".pc" "--exclude" ".hg" "--exclude" ".git")) nil [11951 12089])
            ("PHONY" variable (:default-value ("scripts_basic")) nil [12260 12283])
            ("scripts_basic" function nil nil [12283 12369])
            ("scripts/basic/%" function (:arguments ("scripts_basic" ";")) nil [12436 12469])
            ("PHONY" variable (:default-value ("outputmakefile")) nil [12470 12494])
            ("outputmakefile" function nil nil [12659 12675])
            ("version_h" variable (:default-value ("include/generated/version_autogenerated.h")) nil [13273 13328])
            ("timestamp_h" variable (:default-value ("include/generated/timestamp_autogenerated.h")) nil [13328 13387])
            ("no-dot-config-targets" variable (:default-value ("clean" "clobber" "mrproper" "distclean" "help" "%docs" "check%" "coccicheck" "ubootversion" "backup")) nil [13388 13507])
            ("config-targets" variable (:default-value ("0")) nil [13508 13528])
            ("mixed-targets" variable (:default-value ("0")) nil [13528 13548])
            ("dot-config" variable (:default-value ("1")) nil [13548 13568])
            ("PHONY" variable (:default-value ("$(MAKECMDGOALS)" "__build_one_by_one")) nil [14177 14221])
            ("$(filter-out __build_one_by_one, $(MAKECMDGOALS))" function (:arguments ("__build_one_by_one")) nil [14222 14296])
            ("__build_one_by_one" function nil nil [14297 14410])
            ("KBUILD_DEFCONFIG" variable (:default-value ("sandbox_defconfig")) nil [14644 14682])
            ("config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [14722 14806])
            ("%config" function (:arguments ("scripts_basic" "outputmakefile" "FORCE")) nil [14807 14892])
            ("include/config/auto.conf.cmd" function (:arguments (";")) nil [15400 15450])
            ("$(KCONFIG_CONFIG)" function (:arguments (";")) nil [15400 15450])
            ("include/config/%.conf" function (:arguments ("$(KCONFIG_CONFIG)" "include/config/auto.conf.cmd")) nil [15708 16329])
            ("autoconf_is_old" variable (:default-value ("$(shell find . -path ./$(KCONFIG_CONFIG) -newer \\
						include/config/auto.conf)")) nil [16792 16893])
            ("config.mk" include nil nil [16920 16938])
            ("arch/$(ARCH)/Makefile" include nil nil [16938 16968])
            ("include/config/auto.conf" function (:arguments (";")) nil [17792 17820])
            ("KBUILD_CFLAGS" variable (:default-value ("-Os")) nil [17877 17898])
            ("KBUILD_CFLAGS" variable (:default-value ("-O2")) nil [17903 17924])
            ("KBUILD_CFLAGS" variable (:default-value ("-DBUILD_TAG='\"$(BUILD_TAG)\"'")) nil [17947 17993])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fno-stack-protector)")) nil [18000 18056])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-fno-delete-null-pointer-checks)")) nil [18056 18123])
            ("KBUILD_CFLAGS" variable (:default-value ("-g")) nil [18124 18144])
            ("KBUILD_AFLAGS" variable (:default-value ("-g")) nil [18246 18266])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Wno-format-nonliteral)")) nil [18418 18476])
            ("KBUILD_AFLAGS" variable (:default-value ("-Wa,-gstabs,-S")) nil [18581 18613])
            ("KBUILD_CFLAGS" variable (:default-value ("$(call cc-option,-Werror=date-time)")) nil [18700 18755])
            ("KBUILD_CPPFLAGS" variable (:default-value ("-DCONFIG_SYS_TEXT_BASE=$(CONFIG_SYS_TEXT_BASE)")) nil [18789 18855])
            ("scripts/Makefile.extrawarn" include nil nil [18891 18926])
            ("KBUILD_CPPFLAGS" variable (:default-value ("$(KCPPFLAGS)")) nil [18999 19031])
            ("KBUILD_AFLAGS" variable (:default-value ("$(KAFLAGS)")) nil [19031 19059])
            ("KBUILD_CFLAGS" variable (:default-value ("$(KCFLAGS)")) nil [19059 19087])
            ("UBOOTINCLUDE" variable (:default-value ("-Iinclude" "$(if $(KBUILD_SRC), -I$(srctree)/include)" "-I$(srctree)/arch/$(ARCH)/include" "-include" "$(srctree)/include/linux/kconfig.h")) nil [19200 19365])
            ("NOSTDINC_FLAGS" variable (:default-value ("-nostdinc" "-isystem" "$(shell $(CC) -print-file-name=include)")) nil [19366 19443])
            ("CHECKFLAGS" variable (:default-value ("$(NOSTDINC_FLAGS)")) nil [19443 19479])
            ("cpp_flags" variable (:default-value ("$(KBUILD_CPPFLAGS)" "$(PLATFORM_CPPFLAGS)" "$(UBOOTINCLUDE)" "$(NOSTDINC_FLAGS)")) nil [19489 19585])
            ("c_flags" variable (:default-value ("$(KBUILD_CFLAGS)" "$(cpp_flags)")) nil [19585 19626])
            ("HAVE_VENDOR_COMMON_LIB" variable (:default-value ("$(if $(wildcard $(srctree)/board/$(VENDOR)/common/Makefile),y,n)")) nil [19768 19858])
            ("libs-y" variable (:default-value ("lib/")) nil [19859 19874])
            ("libs-y" variable (:default-value ("fs/")) nil [19964 19978])
            ("libs-y" variable (:default-value ("net/")) nil [19978 19993])
            ("libs-y" variable (:default-value ("disk/")) nil [19993 20009])
            ("libs-y" variable (:default-value ("drivers/")) nil [20009 20028])
            ("libs-y" variable (:default-value ("drivers/dma/")) nil [20028 20051])
            ("libs-y" variable (:default-value ("drivers/gpio/")) nil [20051 20075])
            ("libs-y" variable (:default-value ("drivers/i2c/")) nil [20075 20098])
            ("libs-y" variable (:default-value ("drivers/mmc/")) nil [20098 20121])
            ("libs-y" variable (:default-value ("drivers/mtd/")) nil [20121 20144])
            ("libs-y" variable (:default-value ("drivers/mtd/onenand/")) nil [20189 20220])
            ("libs-y" variable (:default-value ("drivers/mtd/spi/")) nil [20263 20290])
            ("libs-y" variable (:default-value ("drivers/net/")) nil [20290 20313])
            ("libs-y" variable (:default-value ("drivers/net/phy/")) nil [20313 20340])
            ("libs-y" variable (:default-value ("drivers/pci/")) nil [20340 20363])
            ("libs-y" variable (:default-value ("drivers/power/" "drivers/power/fuel_gauge/" "drivers/power/mfd/" "drivers/power/pmic/" "drivers/power/battery/" "drivers/power/regulator/")) nil [20363 20516])
            ("libs-y" variable (:default-value ("drivers/spi/")) nil [20516 20539])
            ("libs-y" variable (:default-value ("drivers/serial/")) nil [20681 20707])
            ("libs-y" variable (:default-value ("drivers/usb/dwc3/")) nil [20707 20735])
            ("libs-y" variable (:default-value ("drivers/usb/emul/")) nil [20735 20763])
            ("libs-y" variable (:default-value ("drivers/usb/eth/")) nil [20763 20790])
            ("libs-y" variable (:default-value ("drivers/usb/gadget/")) nil [20790 20820])
            ("libs-y" variable (:default-value ("drivers/usb/gadget/udc/")) nil [20820 20854])
            ("libs-y" variable (:default-value ("drivers/usb/host/")) nil [20854 20882])
            ("libs-y" variable (:default-value ("drivers/usb/musb/")) nil [20882 20910])
            ("libs-y" variable (:default-value ("drivers/usb/musb-new/")) nil [20910 20942])
            ("libs-y" variable (:default-value ("drivers/usb/phy/")) nil [20942 20969])
            ("libs-y" variable (:default-value ("drivers/usb/ulpi/")) nil [20969 20997])
            ("libs-y" variable (:default-value ("common/")) nil [20997 21015])
            ("libs-y" variable (:default-value ("test/")) nil [21075 21091])
            ("libs-y" variable (:default-value ("test/dm/")) nil [21091 21110])
            ("libs-y" variable (:default-value ("$(if $(BOARDDIR),board/$(BOARDDIR)/)")) nil [21146 21193])
            ("libs-y" variable (:default-value ("$(sort $(libs-y))")) nil [21194 21222])
            ("u-boot-dirs" variable (:default-value ("$(patsubst %/,%,$(filter %/, $(libs-y)))" "tools" "examples")) nil [21223 21294])
            ("u-boot-alldirs" variable (:default-value ("$(sort $(u-boot-dirs) $(patsubst %/,%,$(filter %/, $(libs-))))")) nil [21295 21376])
            ("libs-y" variable (:default-value ("$(patsubst %/, %/built-in.o, $(libs-y))")) nil [21377 21428])
            ("u-boot-init" variable (:default-value ("$(head-y)")) nil [21429 21454])
            ("u-boot-main" variable (:default-value ("$(libs-y)")) nil [21454 21479])
            ("PLATFORM_LIBGCC" variable (:default-value ("arch/$(ARCH)/lib/lib.a")) nil [21533 21574])
            ("PLATFORM_LIBGCC" variable (:default-value ("-L" "$(shell dirname `$(CC) $(c_flags) -print-libgcc-file-name`)" "-lgcc")) nil [21579 21667])
            ("PLATFORM_LIBS" variable (:default-value ("$(PLATFORM_LIBGCC)")) nil [21673 21709])
            ("LDPPFLAGS" variable (:default-value ("-include" "$(srctree)/include/u-boot/u-boot.lds.h" "-DCPUDIR=$(CPUDIR)" "$(shell $(LD) --version | \\
	  sed -ne 's/GNU ld version \\([0-9][0-9]*\\)\\.\\([0-9][0-9]*\\).*/-DLD_MAJOR=\\1 -DLD_MINOR=\\2/p')")) nil [21892 22105])
            ("BOARD_SIZE_CHECK" variable nil nil [22646 22665])
            ("DO_STATIC_RELA" variable (:default-value ("start=$$($(NM) $(1) | grep __rel_dyn_start | cut -f 1 -d ' ');" "end=$$($(NM) $(1) | grep __rel_dyn_end | cut -f 1 -d ' ');" "tools/relocate-rela" "$(2)" "$(3)" "$$start" "$$end")) nil [22828 23020])
            ("DO_STATIC_RELA" variable nil nil [23025 23042])
            ("ALL-y" variable (:default-value ("u-boot.srec" "u-boot.bin" "System.map" "u-boot.cfg" "binary_size_check")) nil [23114 23186])
            ("ALL-y" variable (:default-value ("u-boot-dtb-tegra.bin")) nil [24246 24276])
            ("ALL-y" variable (:default-value ("u-boot-nodtb-tegra.bin")) nil [24281 24313])
            ("ALL-y" variable (:default-value ("$(CONFIG_BUILD_TARGET:\"%\"=%)")) nil [24428 24466])
            ("LDFLAGS_u-boot" variable (:default-value ("$(LDFLAGS_FINAL)")) nil [24473 24508])
            ("LDFLAGS_u-boot" variable (:default-value ("-Ttext" "$(CONFIG_SYS_TEXT_BASE)")) nil [24541 24590])
            ("quiet_cmd_objcopy" variable (:default-value ("OBJCOPY" "$@")) nil [24638 24669])
            ("cmd_objcopy" variable (:default-value ("$(OBJCOPY)" "--gap-fill=0xff" "$(OBJCOPYFLAGS)" "$(OBJCOPYFLAGS_$(@F))" "$<" "$@")) nil [24669 24757])
            ("quiet_cmd_zobjcopy" variable (:default-value ("OBJCOPY" "$@")) nil [24817 24849])
            ("cmd_zobjcopy" variable (:default-value ("$(OBJCOPY)" "$(OBJCOPYFLAGS)" "$(OBJCOPYFLAGS_$(@F))" "$<" "$@")) nil [24849 24919])
            ("quiet_cmd_efipayload" variable (:default-value ("OBJCOPY" "$@")) nil [24920 24954])
            ("cmd_efipayload" variable (:default-value ("$(OBJCOPY)" "-I" "binary" "-O" "$(EFIPAYLOAD_BFDTARGET)" "-B" "$(EFIPAYLOAD_BFDARCH)" "$<" "$@")) nil [24954 25050])
            ("quiet_cmd_mkimage" variable (:default-value ("MKIMAGE" "$@")) nil [25051 25082])
            ("cmd_mkimage" variable (:default-value ("$(objtree)/tools/mkimage" "$(MKIMAGEFLAGS_$(@F))" "-d" "$<" "$@" "$(if $(KBUILD_VERBOSE:1=), >/dev/null)")) nil [25082 25194])
            ("quiet_cmd_cat" variable (:default-value ("CAT" "$@")) nil [25195 25222])
            ("cmd_cat" variable (:default-value ("cat" "$(filter-out $(PHONY), $^)" ">" "$@")) nil [25222 25268])
            ("append" variable (:default-value ("cat" "$(filter-out $< $(PHONY), $^)" ">>" "$@")) nil [25269 25318])
            ("quiet_cmd_pad_cat" variable (:default-value ("CAT" "$@")) nil [25319 25350])
            ("cmd_pad_cat" variable (:default-value ("$(cmd_objcopy)" "&&" "$(append)" "||" "rm" "-f" "$@")) nil [25350 25404])
            ("all" function (:arguments ("$(ALL-y)")) nil [25405 25420])
            ("PHONY" variable (:default-value ("dtbs")) nil [26096 26110])
            ("dts/dt.dtb" function (:arguments ("checkdtc" "u-boot")) nil [26110 26174])
            ("dtbs" function (:arguments ("checkdtc" "u-boot")) nil [26110 26174])
            ("u-boot-dtb.bin" function (:arguments ("u-boot.bin" "dts/dt.dtb" "FORCE")) nil [26175 26243])
            ("%.imx" function (:arguments ("%.bin")) nil [26244 26302])
            ("quiet_cmd_copy" variable (:default-value ("COPY" "$@")) nil [26303 26331])
            ("u-boot.dtb" function (:arguments ("dts/dt.dtb")) nil [26358 26399])
            ("OBJCOPYFLAGS_u-boot.hex" variable (:default-value ("-O" "ihex")) nil [26400 26435])
            ("OBJCOPYFLAGS_u-boot.srec" variable (:default-value ("-O" "srec")) nil [26436 26472])
            ("u-boot.srec" function (:arguments ("u-boot" "FORCE")) nil [26473 26538])
            ("u-boot.hex" function (:arguments ("u-boot" "FORCE")) nil [26473 26538])
            ("OBJCOPYFLAGS_u-boot.bin" variable (:default-value ("-O" "binary" "$(if $(CONFIG_X86_RESET_VECTOR),-R .start16 -R .resetvec)")) nil [26539 26638])
            ("binary_size_check" function (:arguments ("u-boot.bin" "FORCE")) nil [26639 27190])
            ("u-boot.bin" function (:arguments ("u-boot" "FORCE")) nil [27191 27319])
            ("u-boot.ldr" function (:arguments ("u-boot")) nil [27320 27429])
            ("OBJCOPYFLAGS_u-boot.ldr.hex" variable (:default-value ("-I" "binary" "-O" "ihex")) nil [27430 27479])
            ("OBJCOPYFLAGS_u-boot.ldr.srec" variable (:default-value ("-I" "binary" "-O" "srec")) nil [27480 27530])
            ("u-boot.ldr.srec" function (:arguments ("u-boot.ldr" "FORCE")) nil [27531 27608])
            ("u-boot.ldr.hex" function (:arguments ("u-boot.ldr" "FORCE")) nil [27531 27608])
            ("CONFIG_SYS_UBOOT_START" variable (:default-value ("0")) nil [27736 27764])
            ("quiet_cmd_cpp_cfg" variable (:default-value ("CFG" "$@")) nil [27849 27880])
            ("cmd_cpp_cfg" variable (:default-value ("$(CPP)" "-Wp,-MD,$(depfile)" "$(cpp_flags)" "$(LDPPFLAGS)" "-ansi" "-DDO_DEPS_ONLY" "-D__ASSEMBLY__" "-x" "assembler-with-cpp" "-P" "-dM" "-E" "-o" "$@" "$<")) nil [27880 28026])
            ("MKIMAGEFLAGS_u-boot.img" variable (:default-value ("-A" "$(ARCH)" "-T" "firmware" "-C" "none" "-O" "u-boot" "-a" "$(CONFIG_SYS_TEXT_BASE)" "-e" "$(CONFIG_SYS_UBOOT_START)" "-n" "\"U-Boot $(UBOOTRELEASE) for $(BOARD) board\"")) nil [28027 28203])
            ("MKIMAGEFLAGS_u-boot.kwb" variable (:default-value ("-n" "$(srctree)/$(CONFIG_SYS_KWD_CONFIG:\"%\"=%)" "-T" "kwbimage" "-a" "$(CONFIG_SYS_TEXT_BASE)" "-e" "$(CONFIG_SYS_TEXT_BASE)")) nil [28204 28344])
            ("MKIMAGEFLAGS_u-boot-spl.kwb" variable (:default-value ("-n" "$(srctree)/$(CONFIG_SYS_KWD_CONFIG:\"%\"=%)" "-T" "kwbimage" "-a" "$(CONFIG_SPL_TEXT_BASE)" "-e" "$(CONFIG_SPL_TEXT_BASE)")) nil [28345 28489])
            ("MKIMAGEFLAGS_u-boot.pbl" variable (:default-value ("-n" "$(srctree)/$(CONFIG_SYS_FSL_PBL_RCW:\"%\"=%)" "-R" "$(srctree)/$(CONFIG_SYS_FSL_PBL_PBI:\"%\"=%)" "-T" "pblimage")) nil [28490 28624])
            ("u-boot.kwb" function (:arguments ("u-boot.bin" "FORCE")) nil [28625 28704])
            ("u-boot.img" function (:arguments ("u-boot.bin" "FORCE")) nil [28625 28704])
            ("u-boot-spl.kwb" function (:arguments ("u-boot.img" "spl/u-boot-spl.bin" "FORCE")) nil [28705 28785])
            ("MKIMAGEFLAGS_u-boot-dtb.img" variable (:default-value ("$(MKIMAGEFLAGS_u-boot.img)")) nil [28786 28843])
            ("u-boot-dtb.img" function (:arguments ("u-boot-dtb.bin" "FORCE")) nil [28844 28909])
            ("u-boot.sha1" function (:arguments ("u-boot.bin")) nil [28910 28960])
            ("u-boot.dis" function (:arguments ("u-boot")) nil [28961 29004])
            ("u-boot.cfg" function (:arguments ("include/config.h")) nil [29005 29062])
            ("SPL_PAYLOAD" variable (:default-value ("tpl/u-boot-with-tpl.bin")) nil [29080 29119])
            ("SPL_PAYLOAD" variable (:default-value ("u-boot.bin")) nil [29124 29150])
            ("OBJCOPYFLAGS_u-boot-with-spl.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)")) nil [29157 29251])
            ("u-boot-with-spl.bin" function (:arguments ("spl/u-boot-spl.bin" "$(SPL_PAYLOAD)" "FORCE")) nil [29251 29340])
            ("MKIMAGEFLAGS_lpc32xx-spl.img" variable (:default-value ("-T" "lpc32xximage" "-a" "$(CONFIG_SPL_TEXT_BASE)")) nil [29341 29415])
            ("lpc32xx-spl.img" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [29416 29486])
            ("OBJCOPYFLAGS_lpc32xx-boot-0.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)")) nil [29487 29571])
            ("lpc32xx-boot-0.bin" function (:arguments ("lpc32xx-spl.img")) nil [29572 29636])
            ("OBJCOPYFLAGS_lpc32xx-boot-1.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)")) nil [29637 29721])
            ("lpc32xx-boot-1.bin" function (:arguments ("lpc32xx-spl.img")) nil [29722 29786])
            ("lpc32xx-full.bin" function (:arguments ("lpc32xx-boot-0.bin" "lpc32xx-boot-1.bin" "u-boot.img")) nil [29787 29878])
            ("CLEAN_FILES" variable (:default-value ("lpc32xx-*")) nil [29879 29904])
            ("OBJCOPYFLAGS_u-boot-with-tpl.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_TPL_PAD_TO)")) nil [29905 29999])
            ("tpl/u-boot-with-tpl.bin" function (:arguments ("tpl/u-boot-tpl.bin" "u-boot.bin" "FORCE")) nil [29999 30088])
            ("SPL" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [30089 30164])
            ("u-boot-with-nand-spl.imx" function (:arguments ("SPL" "u-boot.bin" "FORCE")) nil [30165 30277])
            ("u-boot-with-spl.imx" function (:arguments ("SPL" "u-boot.bin" "FORCE")) nil [30165 30277])
            ("MKIMAGEFLAGS_u-boot.ubl" variable (:default-value ("-n" "$(UBL_CONFIG)" "-T" "ublimage" "-e" "$(CONFIG_SYS_TEXT_BASE)")) nil [30278 30360])
            ("u-boot.ubl" function (:arguments ("u-boot-with-spl.bin" "FORCE")) nil [30361 30427])
            ("MKIMAGEFLAGS_u-boot-spl.ais" variable (:default-value ("-s" "-n" "$(if $(CONFIG_AIS_CONFIG_FILE), \\
	$(srctree)/$(CONFIG_AIS_CONFIG_FILE:\"%\"=%),\"/dev/null\")" "-T" "aisimage" "-e" "$(CONFIG_SPL_TEXT_BASE)")) nil [30428 30597])
            ("spl/u-boot-spl.ais" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [30597 30670])
            ("OBJCOPYFLAGS_u-boot.ais" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)")) nil [30671 30747])
            ("u-boot.ais" function (:arguments ("spl/u-boot-spl.ais" "u-boot.img" "FORCE")) nil [30747 30823])
            ("u-boot-signed.sb" function (:arguments ("u-boot.bin" "spl/u-boot-spl.bin")) nil [30824 30938])
            ("u-boot.sb" function (:arguments ("u-boot.bin" "spl/u-boot-spl.bin")) nil [30938 31038])
            ("MKIMAGEFLAGS_u-boot-spl.img" variable (:default-value ("-A" "$(ARCH)" "-T" "firmware" "-C" "none" "-a" "$(CONFIG_SPL_TEXT_BASE)" "-e" "$(CONFIG_SPL_TEXT_BASE)" "-n" "XLOADER")) nil [31456 31585])
            ("spl/u-boot-spl.img" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [31585 31658])
            ("OBJCOPYFLAGS_u-boot.spr" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)" "--gap-fill=0xff")) nil [31659 31758])
            ("u-boot.spr" function (:arguments ("spl/u-boot-spl.img" "u-boot.img" "FORCE")) nil [31758 31834])
            ("MKIMAGEFLAGS_u-boot-spl.gph" variable (:default-value ("-A" "$(ARCH)" "-T" "gpimage" "-C" "none" "-a" "$(CONFIG_SPL_TEXT_BASE)" "-e" "$(CONFIG_SPL_TEXT_BASE)" "-n" "SPL")) nil [31835 31959])
            ("spl/u-boot-spl.gph" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [31959 32032])
            ("OBJCOPYFLAGS_u-boot-spi.gph" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)" "--gap-fill=0")) nil [32033 32133])
            ("u-boot-spi.gph" function (:arguments ("spl/u-boot-spl.gph" "u-boot.img" "FORCE")) nil [32133 32213])
            ("MKIMAGEFLAGS_u-boot-nand.gph" variable (:default-value ("-A" "$(ARCH)" "-T" "gpimage" "-C" "none" "-a" "$(CONFIG_SYS_TEXT_BASE)" "-e" "$(CONFIG_SYS_TEXT_BASE)" "-n" "U-Boot")) nil [32214 32342])
            ("u-boot-nand.gph" function (:arguments ("u-boot.bin" "FORCE")) nil [32342 32453])
            ("quiet_cmd_socboot" variable (:default-value ("SOCBOOT" "$@")) nil [32486 32517])
            ("cmd_socboot" variable (:default-value ("cat" "spl/u-boot-spl-dtb.sfp" "spl/u-boot-spl-dtb.sfp" "spl/u-boot-spl-dtb.sfp" "spl/u-boot-spl-dtb.sfp" "u-boot-dtb.img" ">" "$@" "||" "rm" "-f" "$@")) nil [32517 32669])
            ("u-boot-with-spl-dtb.sfp" function (:arguments ("spl/u-boot-spl-dtb.sfp" "u-boot-dtb.img" "FORCE")) nil [32669 32766])
            ("rom" function (:arguments ("u-boot.rom" "FORCE")) nil [32978 33000])
            ("IFDTOOL" variable (:default-value ("$(objtree)/tools/ifdtool")) nil [33001 33034])
            ("IFDTOOL_FLAGS" variable (:default-value ("-f" "0:$(objtree)/u-boot.dtb")) nil [33034 33078])
            ("IFDTOOL_FLAGS" variable (:default-value ("-m" "0x$(shell $(NM) u-boot |grep _dt_ucode_base_size |cut -d' ' -f1)")) nil [33078 33163])
            ("IFDTOOL_FLAGS" variable (:default-value ("-U" "$(CONFIG_SYS_TEXT_BASE):$(objtree)/u-boot.bin")) nil [33163 33229])
            ("IFDTOOL_FLAGS" variable (:default-value ("-w" "$(CONFIG_SYS_X86_START16):$(objtree)/u-boot-x86-16bit.bin")) nil [33229 33307])
            ("IFDTOOL_ME_FLAGS" variable (:default-value ("-D" "$(srctree)/board/$(BOARDDIR)/descriptor.bin")) nil [33341 33408])
            ("IFDTOOL_ME_FLAGS" variable (:default-value ("-i" "ME:$(srctree)/board/$(BOARDDIR)/me.bin")) nil [33408 33470])
            ("IFDTOOL_FLAGS" variable (:default-value ("-w" "$(CONFIG_X86_MRC_ADDR):$(srctree)/board/$(BOARDDIR)/mrc.bin")) nil [33505 33585])
            ("IFDTOOL_FLAGS" variable (:default-value ("-w" "$(CONFIG_FSP_ADDR):$(srctree)/board/$(BOARDDIR)/$(CONFIG_FSP_FILE)")) nil [33620 33707])
            ("IFDTOOL_FLAGS" variable (:default-value ("-w" "$(CONFIG_CMC_ADDR):$(srctree)/board/$(BOARDDIR)/$(CONFIG_CMC_FILE)")) nil [33742 33829])
            ("IFDTOOL_FLAGS" variable (:default-value ("-w" "$(CONFIG_VGA_BIOS_ADDR):$(srctree)/board/$(BOARDDIR)/$(CONFIG_VGA_BIOS_FILE)")) nil [33869 33966])
            ("quiet_cmd_ifdtool" variable (:default-value ("IFDTOOL" "$@")) nil [33973 34004])
            ("cmd_ifdtool" variable (:default-value ("$(IFDTOOL)" "-c" "-r" "$(CONFIG_ROM_SIZE)" "u-boot.tmp;")) nil [34004 34067])
            ("cmd_ifdtool" variable (:default-value ("$(IFDTOOL)" "$(IFDTOOL_ME_FLAGS)" "u-boot.tmp;")) nil [34100 34158])
            ("cmd_ifdtool" variable (:default-value ("$(IFDTOOL)" "$(IFDTOOL_FLAGS)" "u-boot.tmp;")) nil [34164 34219])
            ("cmd_ifdtool" variable (:default-value ("mv" "u-boot.tmp" "$@")) nil [34219 34251])
            ("u-boot.rom" function (:arguments ("u-boot-x86-16bit.bin" "u-boot-dtb.bin")) nil [34252 34328])
            ("OBJCOPYFLAGS_u-boot-x86-16bit.bin" variable (:default-value ("-O" "binary" "-j" ".start16" "-j" ".resetvec")) nil [34329 34401])
            ("u-boot-x86-16bit.bin" function (:arguments ("u-boot" "FORCE")) nil [34401 34464])
            ("OBJCOPYFLAGS_u-boot-sunxi-with-spl.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)" "--gap-fill=0xff")) nil [34496 34612])
            ("u-boot-sunxi-with-spl.bin" function (:arguments ("spl/sunxi-spl.bin" "u-boot$(if $(CONFIG_OF_CONTROL),-dtb,).img" "FORCE")) nil [34612 34739])
            ("OBJCOPYFLAGS_u-boot-nodtb-tegra.bin" variable (:default-value ("-O" "binary" "--pad-to=$(CONFIG_SYS_TEXT_BASE)")) nil [34771 34852])
            ("u-boot-nodtb-tegra.bin" function (:arguments ("spl/u-boot-spl" "u-boot.bin" "FORCE")) nil [34852 34936])
            ("u-boot-dtb-tegra.bin" function (:arguments ("u-boot-nodtb-tegra.bin" "dts/dt.dtb" "FORCE")) nil [34968 35054])
            ("OBJCOPYFLAGS_u-boot-app.efi" variable (:default-value ("$(OBJCOPYFLAGS_EFI)")) nil [35067 35118])
            ("u-boot-app.efi" function (:arguments ("u-boot" "FORCE")) nil [35118 35176])
            ("u-boot-dtb.bin.o" function (:arguments ("u-boot-dtb.bin" "FORCE")) nil [35177 35247])
            ("u-boot-payload.lds" function (:arguments ("$(LDSCRIPT_EFI)" "FORCE")) nil [35248 35322])
            ("u-boot-payload" function (:arguments ("u-boot-dtb.bin.o" "u-boot-payload.lds" "FORCE")) nil [35663 35756])
            ("OBJCOPYFLAGS_u-boot-payload.efi" variable (:default-value ("$(OBJCOPYFLAGS_EFI)")) nil [35757 35812])
            ("u-boot-payload.efi" function (:arguments ("u-boot-payload" "FORCE")) nil [35812 35882])
            ("u-boot-img.bin" function (:arguments ("spl/u-boot-spl.bin" "u-boot.img" "FORCE")) nil [35883 35959])
            ("MKIMAGEFLAGS_u-boot-spl.pbl" variable (:default-value ("-n" "$(srctree)/$(CONFIG_SYS_FSL_PBL_RCW:\"%\"=%)" "-R" "$(srctree)/$(CONFIG_SYS_FSL_PBL_PBI:\"%\"=%)" "-T" "pblimage" "-A" "$(ARCH)" "-a" "$(CONFIG_SPL_TEXT_BASE)")) nil [36120 36300])
            ("spl/u-boot-spl.pbl" function (:arguments ("spl/u-boot-spl.bin" "FORCE")) nil [36301 36374])
            ("UBOOT_BINLOAD" variable (:default-value ("u-boot.img")) nil [36394 36422])
            ("UBOOT_BINLOAD" variable (:default-value ("u-boot.bin")) nil [36427 36455])
            ("OBJCOPYFLAGS_u-boot-with-spl-pbl.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_SPL_PAD_TO)" "--gap-fill=0xff")) nil [36462 36574])
            ("u-boot-with-spl-pbl.bin" function (:arguments ("spl/u-boot-spl.pbl" "$(UBOOT_BINLOAD)" "FORCE")) nil [36575 36670])
            ("OBJCOPYFLAGS_u-boot-img-spl-at-end.bin" variable (:default-value ("-I" "binary" "-O" "binary" "--pad-to=$(CONFIG_UBOOT_PAD_TO)" "--gap-fill=0xff")) nil [36985 37098])
            ("u-boot-img-spl-at-end.bin" function (:arguments ("u-boot.img" "spl/u-boot-spl.bin" "FORCE")) nil [37098 37189])
            ("u-boot.elf" function (:arguments ("u-boot.bin")) nil [37469 37676])
            ("quiet_cmd_smap" variable (:default-value ("GEN" "common/system_map.o")) nil [38013 38058])
            ("cmd_smap" variable (:default-value ("smap=`$(call SYSTEM_MAP,u-boot) | \\
		awk '$$2 ~ /[tTwW]/ {printf $$1 $$3 \"\\\\\\\\000\"}'`" ";" "$(CC)" "$(c_flags)" "-DSYSTEM_MAP=\"\\\"$${smap}\\\"\"" "-c" "$(srctree)/common/system_map.c" "-o" "common/system_map.o")) nil [38058 38270])
            ("u-boot" function (:arguments ("$(u-boot-init)" "$(u-boot-main)" "u-boot.lds")) nil [38271 38349])
            ("$(sort $(u-boot-init) $(u-boot-main))" function (:arguments ("$(u-boot-dirs)" ";")) nil [38534 38590])
            ("PHONY" variable (:default-value ("$(u-boot-dirs)")) nil [38875 38899])
            ("$(u-boot-dirs)" function (:arguments ("prepare" "scripts")) nil [38899 38956])
            ("tools" function (:arguments ("prepare")) nil [38957 38972])
            ("$(filter-out tools, $(u-boot-dirs))" function (:arguments ("tools")) nil [39003 39046])
            ("examples" function (:arguments ("$(filter-out examples, $(u-boot-dirs))")) nil [39183 39232])
            ("include/config/uboot.release" function (:arguments ("include/config/auto.conf" "FORCE")) nil [39424 39516])
            ("PHONY" variable (:default-value ("prepare" "archprepare" "prepare0" "prepare1" "prepare2" "prepare3")) nil [39862 39927])
            ("prepare3" function (:arguments ("include/config/uboot.release")) nil [40095 40134])
            ("prepare2" function (:arguments ("prepare3" "outputmakefile")) nil [40497 40531])
            ("prepare1" function (:arguments ("prepare2" "$(version_h)" "$(timestamp_h)" "include/config/auto.conf")) nil [40532 40625])
            ("archprepare" function (:arguments ("prepare1" "scripts_basic")) nil [40969 41005])
            ("prepare0" function (:arguments ("archprepare" "FORCE")) nil [41006 41058])
            ("prepare" function (:arguments ("prepare0")) nil [41081 41099])
            ("$(version_h)" function (:arguments ("include/config/uboot.release" "FORCE")) nil [41816 41892])
            ("$(timestamp_h)" function (:arguments ("$(srctree)/Makefile" "FORCE")) nil [41893 41964])
            ("quiet_cmd_cpp_lds" variable (:default-value ("LDS" "$@")) nil [42043 42074])
            ("cmd_cpp_lds" variable (:default-value ("$(CPP)" "-Wp,-MD,$(depfile)" "$(cpp_flags)" "$(LDPPFLAGS)" "-ansi" "-D__ASSEMBLY__" "-x" "assembler-with-cpp" "-P" "-o" "$@" "$<")) nil [42074 42199])
            ("u-boot.lds" function (:arguments ("$(LDSCRIPT)" "prepare" "FORCE")) nil [42200 42270])
            ("spl/u-boot-spl.bin" function (:arguments ("spl/u-boot-spl")) nil [42271 42310])
            ("spl/u-boot-spl" function (:arguments ("tools" "prepare" "$(if $(CONFIG_OF_SEPARATE),dts/dt.dtb)")) nil [42310 42439])
            ("spl/sunxi-spl.bin" function (:arguments ("spl/u-boot-spl")) nil [42440 42478])
            ("spl/u-boot-spl-dtb.sfp" function (:arguments ("spl/u-boot-spl")) nil [42479 42522])
            ("tpl/u-boot-tpl.bin" function (:arguments ("tools" "prepare")) nil [42523 42617])
            ("TAG_SUBDIRS" variable (:default-value ("$(patsubst %,$(srctree)/%,$(u-boot-dirs) include)")) nil [42618 42683])
            ("FIND" variable (:default-value ("find")) nil [42684 42697])
            ("FINDFLAGS" variable (:default-value ("-L")) nil [42697 42713])
            ("ctags" function nil nil [42714 42834])
            ("tags" function nil nil [42714 42834])
            ("etags" function nil nil [42835 42931])
            ("cscope" function nil nil [42931 43041])
            ("SYSTEM_MAP" variable (:default-value ("$(NM)" "$1" "|" "grep" "-v" "'\\(compiled\\)\\|\\(\\.o$$\\)\\|\\( [aUw] \\)\\|\\(\\.\\.ng$$\\)\\|\\(LASH[RL]DI\\)'" "|" "LC_ALL=C" "sort")) nil [43042 43171])
            ("System.map" function (:arguments ("u-boot")) nil [43171 43220])
            ("checkdtc" function nil nil [43221 43365])
            ("checkarmreloc" function (:arguments ("u-boot")) nil [43531 43804])
            ("env" function (:arguments ("scripts_basic")) nil [43805 43855])
            ("tools-only" function (:arguments ("scripts_basic" "$(version_h)" "$(timestamp_h)")) nil [43856 43938])
            ("tools-all" function (:arguments ("export" "HOST_TOOLS_ALL=y")) nil [43939 43974])
            ("tools-all" function (:arguments ("env" "tools" ";")) nil [43974 43997])
            ("cross_tools" function (:arguments ("export" "CROSS_BUILD_TOOLS=y")) nil [43998 44038])
            ("cross_tools" function (:arguments ("tools" ";")) nil [44038 44059])
            (".PHONY" function (:arguments ("CHANGELOG")) nil [44060 44079])
            ("CHANGELOG" function nil nil [44079 44171])
            ("include/license.h" function (:arguments ("tools/bin2header" "COPYING")) nil [44172 44296])
            ("CLEAN_DIRS" variable (:default-value ("$(MODVERDIR)" "$(foreach d, spl tpl, $(patsubst %,$d/%, \\
			$(filter-out include, $(shell ls -1 $d 2>/dev/null))))")) nil [44715 44854])
            ("CLEAN_FILES" variable (:default-value ("include/bmp_logo.h" "include/bmp_logo_data.h" "boot*" "u-boot*" "MLO*" "SPL" "System.map")) nil [44855 44957])
            ("MRPROPER_DIRS" variable (:default-value ("include/config" "include/generated" "spl" "tpl" ".tmp_objdiff")) nil [45009 45087])
            ("MRPROPER_FILES" variable (:default-value (".config" ".config.old" "include/autoconf.mk*" "include/config.h" "ctags" "etags" "TAGS" "cscope*" "GPATH" "GTAGS" "GRTAGS" "GSYMS")) nil [45087 45219])
            ("clean" function (:arguments ("rm-dirs" ":=" "$(CLEAN_DIRS)")) nil [45288 45321])
            ("clean" function (:arguments ("rm-files" ":=" "$(CLEAN_FILES)")) nil [45321 45355])
            ("clean-dirs" variable (:default-value ("$(foreach f,$(u-boot-alldirs),$(if $(wildcard $(srctree)/$f/Makefile),$f))")) nil [45356 45445])
            ("clean-dirs" variable (:default-value ("$(addprefix _clean_, $(clean-dirs) doc/DocBook)")) nil [45446 45513])
            ("PHONY" variable (:default-value ("$(clean-dirs)" "clean" "archclean")) nil [45514 45553])
            ("$(clean-dirs)" function nil nil [45553 45616])
            ("clean" function (:arguments ("$(clean-dirs)")) nil [45645 46105])
            ("mrproper" function (:arguments ("rm-dirs" ":=" "$(wildcard $(MRPROPER_DIRS))")) nil [46167 46218])
            ("mrproper" function (:arguments ("rm-files" ":=" "$(wildcard $(MRPROPER_FILES))")) nil [46218 46270])
            ("mrproper-dirs" variable (:default-value ("$(addprefix _mrproper_,scripts)")) nil [46270 46324])
            ("PHONY" variable (:default-value ("$(mrproper-dirs)" "mrproper" "archmrproper")) nil [46325 46373])
            ("$(mrproper-dirs)" function nil nil [46373 46442])
            ("mrproper" function (:arguments ("clean" "$(mrproper-dirs)")) nil [46443 46549])
            ("PHONY" variable (:default-value ("distclean")) nil [46564 46583])
            ("distclean" function (:arguments ("mrproper")) nil [46584 46877])
            ("backup" function nil nil [46878 46995])
            ("help" function nil nil [46996 49306])
            ("%docs" function (:arguments ("scripts_basic" "FORCE")) nil [49410 49518])
            ("PHONY" variable (:default-value ("prepare" "scripts")) nil [49532 49557])
            ("prepare" function (:arguments (";")) nil [49557 49568])
            ("scripts" function (:arguments (";")) nil [49568 49579])
            ("PHONY" variable (:default-value ("checkstack" "ubootrelease" "ubootversion")) nil [49648 49694])
            ("checkstack" function nil nil [49695 49807])
            ("ubootrelease" function nil nil [49808 49912])
            ("ubootversion" function nil nil [49913 49950])
            ("%.s" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [50605 50697])
            ("%.i" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [50697 50789])
            ("%.o" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [50789 50881])
            ("%.lst" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [50881 50975])
            ("%.s" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [50975 51067])
            ("%.o" function (:arguments ("%.S" "prepare" "scripts" "FORCE")) nil [51067 51159])
            ("%.symtypes" function (:arguments ("%.c" "prepare" "scripts" "FORCE")) nil [51159 51258])
            ("/" function (:arguments ("prepare" "scripts" "FORCE")) nil [51269 51393])
            ("%/" function (:arguments ("prepare" "scripts" "FORCE")) nil [51393 51518])
            ("%.ko" function (:arguments ("prepare" "scripts" "FORCE")) nil [51518 51711])
            ("quiet_cmd_rmdirs" variable (:default-value ("$(if $(wildcard $(rm-dirs)),CLEAN   $(wildcard $(rm-dirs)))")) nil [51838 51917])
            ("quiet_cmd_rmfiles" variable (:default-value ("$(if $(wildcard $(rm-files)),CLEAN   $(wildcard $(rm-files)))")) nil [51955 52037])
            ("targets" variable (:default-value ("$(wildcard $(sort $(targets)))")) nil [52108 52150])
            ("cmd_files" variable (:default-value ("$(wildcard .*.cmd $(foreach f,$(targets),$(dir $(f)).$(notdir $(f)).cmd))")) nil [52150 52237])
            ("PHONY" variable (:default-value ("FORCE")) nil [52380 52395])
            ("FORCE" function nil nil [52395 52402]))          
      :file "Makefile"
      :pointmax 52562
      :fsize 52561
      :lastmodtime '(21964 48402 0 0)
      :unmatched-syntax '((thing 22638 . 22640) (thing 22633 . 22634) (thing 22632 . 22633) (thing 22627 . 22631) (thing 22621 . 22622) (thing 22618 . 22621) (thing 22579 . 22617) (thing 22574 . 22578) (thing 22568 . 22569) (thing 22564 . 22567) (thing 22537 . 22563) (thing 22532 . 22536) (thing 22526 . 22527) (thing 22522 . 22525) (thing 22496 . 22521) (thing 22491 . 22495) (thing 22485 . 22486) (thing 22481 . 22484) (thing 22451 . 22480) (thing 22446 . 22450) (thing 22437 . 22441) (thing 22435 . 22436) (thing 22430 . 22435) (thing 22429 . 22430) (thing 22428 . 22429) (thing 22424 . 22427) (thing 22417 . 22423) (thing 22416 . 22417) (thing 22415 . 22416) (thing 22410 . 22414) (thing 22407 . 22409) (thing 22402 . 22403) (thing 22362 . 22402) (thing 22361 . 22362) (thing 22356 . 22361) (thing 22351 . 22352) (thing 22321 . 22351) (thing 22320 . 22321) (thing 22314 . 22320) (thing 22313 . 22314) (thing 22308 . 22309) (thing 22291 . 22307) (thing 22291 . 22291) (thing 21737 . 21752) (thing 21730 . 21736) (thing 21730 . 21730) (thing 21716 . 21729) (thing 21709 . 21715) (thing 21709 . 21709) (thing 21135 . 21144) (thing 21133 . 21134) (thing 21132 . 21133) (thing 21116 . 21131) (thing 21115 . 21116) (thing 21110 . 21115) (thing 21110 . 21110) (thing 21069 . 21074) (thing 21067 . 21068) (thing 21066 . 21067) (thing 21048 . 21065) (thing 21047 . 21048) (thing 21042 . 21047) (thing 21042 . 21042) (thing 21037 . 21041) (thing 21035 . 21036) (thing 21034 . 21035) (thing 21021 . 21033) (thing 21020 . 21021) (thing 21015 . 21020) (thing 21015 . 21015) (thing 20661 . 20680) (thing 20659 . 20660) (thing 20658 . 20659) (thing 20636 . 20657) (thing 20635 . 20636) (thing 20630 . 20635) (thing 20630 . 20630) (thing 20613 . 20629) (thing 20611 . 20612) (thing 20610 . 20611) (thing 20589 . 20609) (thing 20588 . 20589) (thing 20583 . 20588) (thing 20583 . 20583) (thing 20567 . 20582) (thing 20565 . 20566) (thing 20564 . 20565) (thing 20545 . 20563) (thing 20544 . 20545) (thing 20539 . 20544) (thing 20539 . 20539) (thing 20246 . 20262) (thing 20244 . 20245) (thing 20243 . 20244) (thing 20226 . 20242) (thing 20225 . 20226) (thing 20220 . 20225) (thing 20220 . 20220) (thing 20171 . 20188) (thing 20169 . 20170) (thing 20168 . 20169) (thing 20150 . 20167) (thing 20149 . 20150) (thing 20144 . 20149) (thing 20144 . 20144) (thing 19959 . 19963) (thing 19957 . 19958) (thing 19956 . 19957) (thing 19938 . 19955) (thing 19937 . 19938) (thing 19932 . 19937) (thing 19932 . 19932) (thing 19923 . 19931) (thing 19915 . 19923) (thing 19914 . 19915) (thing 19908 . 19914) (thing 19906 . 19907) (thing 19905 . 19906) (thing 19880 . 19904) (thing 19879 . 19880) (thing 19874 . 19879) (thing 19874 . 19874) (thing 18869 . 18889) (thing 18862 . 18868) (thing 18862 . 18862) (thing 18380 . 18410) (thing 18379 . 18379) (thing 17820 . 17825) (thing 17820 . 17820) (thing 17722 . 17727) (thing 17721 . 17721) (thing 17669 . 17720) (thing 17668 . 17668) (thing 17636 . 17667) (thing 17635 . 17635) (thing 17629 . 17634) (thing 17628 . 17628) (thing 17583 . 17627) (thing 17582 . 17582) (thing 17550 . 17581) (thing 17549 . 17549) (thing 17543 . 17548) (thing 17542 . 17542) (thing 17489 . 17541) (thing 17488 . 17488) (thing 17456 . 17487) (thing 17455 . 17455) (thing 17349 . 17354) (thing 17348 . 17348) (thing 17295 . 17347) (thing 17294 . 17294) (thing 17259 . 17293) (thing 17258 . 17258) (thing 17232 . 17257) (thing 17231 . 17231) (thing 17172 . 17230) (thing 17171 . 17171) (thing 16368 . 16391) (thing 16359 . 16367) (thing 16359 . 16359) (thing 16339 . 16358) (thing 16330 . 16338) (thing 16330 . 16330) (thing 15305 . 15333) (thing 15296 . 15304) (thing 15296 . 15296) (thing 15170 . 15194) (thing 15161 . 15169) (thing 15161 . 15161) (thing 14706 . 14720) (thing 14689 . 14705) (thing 14682 . 14688) (thing 14682 . 14682) (thing 13970 . 13975) (thing 13962 . 13962) (thing 13956 . 13961) (thing 13940 . 13940) (thing 13938 . 13939) (thing 13936 . 13937) (thing 13935 . 13936) (thing 13921 . 13934) (thing 13897 . 13897) (thing 13868 . 13896) (thing 13862 . 13867) (thing 13846 . 13846) (thing 13844 . 13845) (thing 13842 . 13843) (thing 13841 . 13842) (thing 13826 . 13840) (thing 13810 . 13810) (thing 13766 . 13809) (thing 13760 . 13765) (thing 13752 . 13752) (thing 13714 . 13719) (thing 13713 . 13713) (thing 13696 . 13712) (thing 13695 . 13695) (thing 13631 . 13694) (thing 13630 . 13630) (thing 12730 . 12833) (thing 12729 . 12729) (thing 12699 . 12728) (thing 12698 . 12698) (thing 11502 . 11515) (thing 11488 . 11501) (thing 11481 . 11487) (thing 11481 . 11481) (thing 11473 . 11480) (thing 11460 . 11472) (thing 11447 . 11459) (thing 11432 . 11446) (thing 11416 . 11431) (thing 11409 . 11415) (thing 11409 . 11409) (thing 11397 . 11407) (thing 11391 . 11396) (thing 11387 . 11390) (thing 11374 . 11386) (thing 11366 . 11373) (thing 11359 . 11365) (thing 11359 . 11359) (thing 11352 . 11358) (thing 11347 . 11351) (thing 11343 . 11346) (thing 11338 . 11342) (thing 11331 . 11337) (thing 11331 . 11331) (thing 11323 . 11330) (thing 11315 . 11322) (thing 11309 . 11314) (thing 11305 . 11308) (thing 11302 . 11304) (thing 11299 . 11301) (thing 11295 . 11298) (thing 11288 . 11294) (thing 11288 . 11288) (thing 11285 . 11287) (thing 11282 . 11284) (thing 11279 . 11281) (thing 11265 . 11278) (thing 11253 . 11264) (thing 11242 . 11252) (thing 11235 . 11241) (thing 11222 . 11234) (thing 11215 . 11221) (thing 11215 . 11215) (thing 11206 . 11214) (thing 11199 . 11205) (thing 11195 . 11198) (thing 11188 . 11194) (thing 11182 . 11187) (thing 11178 . 11181) (thing 11173 . 11177) (thing 11166 . 11172) (thing 11166 . 11166) (thing 11153 . 11165) (thing 11140 . 11152) (thing 11131 . 11139) (thing 11120 . 11130) (thing 11112 . 11119) (thing 11105 . 11111) (thing 11105 . 11105) (thing 9918 . 9931) (thing 9907 . 9917) (thing 9891 . 9906) (thing 9884 . 9890) (thing 9884 . 9884) (thing 9869 . 9883) (thing 9854 . 9868) (thing 9847 . 9853) (thing 9847 . 9847) (thing 9487 . 9515) (thing 9486 . 9487) (thing 9484 . 9485) (thing 9483 . 9484) (thing 9468 . 9482) (thing 9466 . 9466) (thing 7230 . 7244) (thing 7223 . 7229) (thing 7223 . 7223) (thing 7215 . 7222) (thing 7213 . 7214) (thing 7212 . 7213) (thing 7197 . 7211) (thing 7197 . 7197) (thing 7188 . 7189) (thing 7187 . 7188) (thing 7173 . 7186) (thing 7173 . 7173) (thing 7020 . 7026) (thing 7011 . 7019) (thing 7004 . 7010) (thing 7004 . 7004) (thing 6594 . 6600) (thing 6585 . 6593) (thing 6585 . 6585) (thing 6534 . 6539) (thing 6526 . 6533) (thing 6518 . 6525) (thing 6511 . 6517) (thing 6511 . 6511) (thing 6384 . 6389) (thing 6376 . 6376) (thing 6363 . 6375) (thing 6362 . 6363) (thing 6360 . 6361) (thing 6359 . 6360) (thing 6351 . 6358) (thing 6335 . 6335) (thing 6330 . 6334) (thing 6322 . 6322) (thing 6319 . 6321) (thing 6317 . 6318) (thing 6316 . 6317) (thing 6308 . 6315) (thing 6292 . 6292) (thing 6228 . 6228) (thing 6194 . 6227) (thing 6189 . 6193) (thing 6181 . 6181) (thing 6174 . 6175) (thing 6172 . 6173) (thing 6171 . 6172) (thing 6163 . 6170) (thing 6155 . 6155) (thing 6117 . 6117) (thing 5905 . 5908) (thing 5904 . 5905) (thing 5902 . 5903) (thing 5901 . 5902) (thing 5887 . 5900) (thing 5885 . 5885) (thing 5831 . 5840) (thing 5830 . 5831) (thing 5828 . 5829) (thing 5827 . 5828) (thing 5813 . 5826) (thing 5811 . 5811) (thing 5603 . 5604) (thing 5601 . 5602) (thing 5585 . 5600) (thing 5583 . 5583) (thing 5550 . 5553) (thing 5549 . 5550) (thing 5547 . 5548) (thing 5531 . 5546) (thing 5529 . 5529) (thing 4778 . 4783) (thing 4778 . 4778) (thing 4744 . 4749) (thing 4744 . 4744) (thing 4326 . 4417) (thing 4325 . 4326) (thing 4325 . 4325) (thing 3873 . 3876) (thing 3872 . 3873) (thing 3870 . 3871) (thing 3869 . 3870) (thing 3855 . 3868) (thing 3853 . 3853) (thing 2985 . 2999) (thing 2983 . 2984) (thing 2977 . 2982) (thing 2970 . 2976) (thing 2970 . 2970) (thing 2949 . 2956) (thing 2948 . 2949) (thing 2943 . 2948) (thing 2941 . 2941) (thing 2881 . 2885) (thing 2881 . 2881) (thing 2867 . 2874) (thing 2866 . 2867) (thing 2861 . 2866) (thing 2859 . 2859) (thing 2767 . 2799) (thing 2761 . 2766) (thing 2761 . 2761) (thing 2672 . 2673) (thing 2670 . 2671) (thing 2668 . 2669) (thing 2666 . 2666) (thing 2659 . 2665) (thing 2658 . 2659) (thing 2653 . 2658) (thing 2651 . 2651) (thing 2644 . 2645) (thing 2642 . 2643) (thing 2640 . 2640) (thing 2638 . 2639) (thing 2632 . 2637) (thing 2630 . 2630) (thing 2594 . 2595) (thing 2592 . 2593) (thing 2577 . 2591) (thing 2575 . 2575) (thing 2543 . 2546) (thing 2542 . 2543) (thing 2540 . 2541) (thing 2525 . 2539) (thing 2523 . 2523) (thing 704 . 716) (thing 695 . 703) (thing 695 . 695) (thing 638 . 648) (thing 627 . 637) (thing 620 . 626) (thing 620 . 620) (thing 587 . 593) (thing 578 . 586) (thing 578 . 578) (thing 23187 . 23187) (thing 23187 . 23191) (thing 23191 . 23192) (thing 23192 . 23215) (thing 23216 . 23217) (thing 23217 . 23218) (thing 23219 . 23237) (thing 23269 . 23269) (thing 23269 . 23273) (thing 23273 . 23274) (thing 23274 . 23294) (thing 23295 . 23296) (thing 23296 . 23297) (thing 23298 . 23321) (thing 23483 . 23483) (thing 23483 . 23487) (thing 23487 . 23488) (thing 23488 . 23508) (thing 23509 . 23510) (thing 23510 . 23511) (thing 23512 . 23522) (thing 23535 . 23535) (thing 23535 . 23539) (thing 23539 . 23540) (thing 23540 . 23552) (thing 23553 . 23554) (thing 23554 . 23555) (thing 23556 . 23574) (thing 23575 . 23575) (thing 23575 . 23579) (thing 23579 . 23580) (thing 23580 . 23602) (thing 23603 . 23604) (thing 23604 . 23605) (thing 23606 . 23616) (thing 23617 . 23617) (thing 23617 . 23621) (thing 23621 . 23622) (thing 23622 . 23634) (thing 23635 . 23636) (thing 23636 . 23637) (thing 23638 . 23656) (thing 23657 . 23657) (thing 23657 . 23661) (thing 23661 . 23662) (thing 23662 . 23682) (thing 23683 . 23684) (thing 23684 . 23685) (thing 23686 . 23696) (thing 23697 . 23711) (thing 23745 . 23745) (thing 23745 . 23749) (thing 23749 . 23750) (thing 23750 . 23770) (thing 23771 . 23772) (thing 23772 . 23773) (thing 23774 . 23788) (thing 23795 . 23795) (thing 23795 . 23799) (thing 23799 . 23800) (thing 23800 . 23820) (thing 23821 . 23822) (thing 23822 . 23823) (thing 23824 . 23834) (thing 23865 . 23865) (thing 23865 . 23869) (thing 23869 . 23870) (thing 23870 . 23882) (thing 23883 . 23884) (thing 23884 . 23885) (thing 23886 . 23887) (thing 23887 . 23912) (thing 23919 . 23919) (thing 23919 . 23923) (thing 23923 . 23924) (thing 23924 . 23943) (thing 23944 . 23945) (thing 23945 . 23946) (thing 23947 . 23957) (thing 23958 . 23958) (thing 23958 . 23962) (thing 23962 . 23963) (thing 23963 . 23979) (thing 23980 . 23981) (thing 23981 . 23982) (thing 23983 . 23997) (thing 23998 . 23998) (thing 23998 . 24002) (thing 24002 . 24003) (thing 24003 . 24020) (thing 24021 . 24022) (thing 24022 . 24023) (thing 24024 . 24042) (thing 24066 . 24066) (thing 24066 . 24070) (thing 24070 . 24071) (thing 24071 . 24096) (thing 24097 . 24098) (thing 24098 . 24099) (thing 24100 . 24110) (thing 25458 . 25458) (thing 25459 . 25519) (thing 25520 . 25520) (thing 25521 . 25572) (thing 25573 . 25573) (thing 25574 . 25630) (thing 25631 . 25631) (thing 25632 . 25692) (thing 25693 . 25693) (thing 25694 . 25754) (thing 25794 . 25794) (thing 25795 . 25855) (thing 25856 . 25856) (thing 25857 . 25916) (thing 25917 . 25917) (thing 25918 . 25973) (thing 25974 . 25974) (thing 25975 . 26026) (thing 26027 . 26027) (thing 26028 . 26088) (thing 26331 . 26331) (thing 26337 . 26345) (thing 26346 . 26347) (thing 26348 . 26350) (thing 26351 . 26352) (thing 26352 . 26353) (thing 26354 . 26355) (thing 26355 . 26356) (thing 35396 . 35396) (thing 35396 . 35420) (thing 35421 . 35422) (thing 35422 . 35423) (thing 35424 . 35426) (thing 35432 . 35433) (thing 35433 . 35434) (thing 35435 . 35435) (thing 35441 . 35459) (thing 35460 . 35461) (thing 35461 . 35462) (thing 35463 . 35464) (thing 35464 . 35468) (thing 35469 . 35470) (thing 35470 . 35491) (thing 35492 . 35494) (thing 35495 . 35496) (thing 35496 . 35497) (thing 35506 . 35508) (thing 35509 . 35527) (thing 35528 . 35549) (thing 35558 . 35571) (thing 35572 . 35590) (thing 35591 . 35607) (thing 35616 . 35617) (thing 35617 . 35661) (thing 37745 . 37745) (thing 37745 . 37763) (thing 37764 . 37765) (thing 37765 . 37766) (thing 37767 . 37769) (thing 37775 . 37776) (thing 37776 . 37777) (thing 37778 . 37778) (thing 37784 . 37796) (thing 37797 . 37798) (thing 37798 . 37799) (thing 37800 . 37801) (thing 37801 . 37805) (thing 37806 . 37807) (thing 37807 . 37816) (thing 37817 . 37818) (thing 37818 . 37834) (thing 37835 . 37837) (thing 37838 . 37839) (thing 37839 . 37840) (thing 37849 . 37851) (thing 37852 . 37862) (thing 37863 . 37864) (thing 37864 . 37877) (thing 37914 . 37927) (thing 37928 . 37929) (thing 37929 . 37942) (thing 37943 . 37954) (thing 37979 . 37980) (thing 37980 . 37995) (thing 37996 . 38000) (thing 38001 . 38011) (thing 38377 . 38377) (thing 38378 . 38394) (thing 38395 . 38395) (thing 38396 . 38436) (thing 39233 . 39233) (thing 39233 . 39239) (thing 39240 . 39261) (thing 39262 . 39262) (thing 39263 . 39350) (thing 39351 . 39351) (thing 39351 . 39356) (thing 40157 . 40157) (thing 40158 . 40209) (thing 40210 . 40210) (thing 40211 . 40422) (thing 40699 . 40699) (thing 40700 . 40763) (thing 40764 . 40764) (thing 40765 . 40846) (thing 40847 . 40847) (thing 40848 . 40859) (thing 40904 . 40904) (thing 40905 . 40948) (thing 40949 . 40949) (thing 40950 . 40961) (thing 41201 . 41201) (thing 41201 . 41207) (thing 41208 . 41225) (thing 41226 . 41226) (thing 41227 . 41481) (thing 41482 . 41482) (thing 41482 . 41487) (thing 41489 . 41489) (thing 41489 . 41495) (thing 41496 . 41515) (thing 41516 . 41516) (thing 41517 . 41808) (thing 41809 . 41809) (thing 41809 . 41814) (thing 49580 . 49580) (thing 49580 . 49585) (thing 49614 . 49614) (thing 49614 . 49619) (thing 50319 . 50319) (thing 50327 . 50336) (thing 50338 . 50339) (thing 50340 . 50341) (thing 50341 . 50366) (thing 50367 . 50367) (thing 50375 . 50385) (thing 50386 . 50387) (thing 50388 . 50389) (thing 50389 . 50397) (thing 50403 . 50403) (thing 50411 . 50420) (thing 50420 . 50421) (thing 50421 . 50422) (thing 50422 . 50463) (thing 50464 . 50464) (thing 50472 . 50481) (thing 50483 . 50484) (thing 50485 . 50486) (thing 50486 . 50501) (thing 50501 . 50502) (thing 50502 . 50533) (thing 50534 . 50534) (thing 50542 . 50552) (thing 50553 . 50554) (thing 50555 . 50556) (thing 50556 . 50597) (thing 51917 . 51917) (thing 51923 . 51933) (thing 51934 . 51935) (thing 51936 . 51938) (thing 51939 . 51942) (thing 51943 . 51944) (thing 51944 . 51953) (thing 52037 . 52037) (thing 52043 . 52054) (thing 52055 . 52056) (thing 52057 . 52059) (thing 52060 . 52062) (thing 52063 . 52064) (thing 52064 . 52074) (thing 52260 . 52260) (thing 52262 . 52263) (thing 52263 . 52274) (thing 52274 . 52275) (thing 52276 . 52277) (thing 52327 . 52327) (thing 52329 . 52336) (thing 52337 . 52338) (thing 52338 . 52349) (thing 52357 . 52357) (thing 52357 . 52362) (thing 52545 . 52545) (thing 52545 . 52551) (thing 52551 . 52552) (thing 52553 . 52554) (thing 52554 . 52561))))
  :file "!Users!Terry!Developer!Ubuntu!u-boot-sunxi!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
